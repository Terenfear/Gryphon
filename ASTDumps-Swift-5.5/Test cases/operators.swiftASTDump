(source_file "/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift"
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:24:1 - line:24:9]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:24:1 - line:24:9]
      (pattern_binding_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:24:1 - line:24:9]
        (pattern_named type='Int' 'x')
        Original init:
        (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:24:9 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:24:9 - line:24:9] value=0 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)
        Processed init:
        (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:24:9 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:24:9 - line:24:9] value=0 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))
))
  (var_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:24:5 - line:24:5] "x" type='Int' interface type='Int' access=internal let readImpl=stored immutable)
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:25:1 - line:25:13]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:25:1 - line:25:13]
      (pattern_binding_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:25:1 - line:25:13]
        (pattern_named type='Int' 'y')
        Original init:
        (sequence_expr type='<null>'
          (declref_expr type='<null>' decl=Main.(file).x@/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:24:5 function_ref=unapplied)
          (overloaded_decl_ref_expr type='<null>' name=+ number_of_decls=31 function_ref=single decls=[
            Swift.(file).String extension.+,
            Swift.(file).Float extension.+,
            Swift.(file).Double extension.+,
            Swift.(file).Float80 extension.+,
            Swift.(file).UInt8 extension.+,
            Swift.(file).Int8 extension.+,
            Swift.(file).UInt16 extension.+,
            Swift.(file).Int16 extension.+,
            Swift.(file).UInt32 extension.+,
            Swift.(file).Int32 extension.+,
            Swift.(file).UInt64 extension.+,
            Swift.(file).Int64 extension.+,
            Swift.(file).UInt extension.+,
            Swift.(file).Int extension.+,
            Swift.(file).Array extension.+,
            Swift.(file).FloatingPoint.+,
            Swift.(file).AdditiveArithmetic.+,
            Swift.(file).BinaryInteger.+,
            Swift.(file).Strideable extension.+,
            Swift.(file).Strideable extension.+,
            Swift.(file).Sequence extension.+,
            Swift.(file).Sequence extension.+,
            Swift.(file).SIMD extension.+,
            Swift.(file).SIMD extension.+,
            Swift.(file).SIMD extension.+,
            Swift.(file).SIMD extension.+,
            Swift.(file).SIMD extension.+,
            Swift.(file).SIMD extension.+,
            Swift.(file).RangeReplaceableCollection extension.+,
            Swift.(file).RangeReplaceableCollection extension.+,
            Swift.(file).RangeReplaceableCollection extension.+])
          (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:25:13 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:25:13 - line:25:13] value=1 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))
        Processed init:
        (binary_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:25:11 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:25:9 - line:25:13] nothrow
          (dot_syntax_call_expr implicit type='(Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:25:11 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:25:11 - line:25:11] nothrow
            (declref_expr type='(Int.Type) -> (Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:25:11 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:25:11 - line:25:11] decl=Swift.(file).Int extension.+ function_ref=single)
            (type_expr implicit type='Int.Type' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:25:11 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:25:11 - line:25:11] typerepr='Int'))
          (tuple_expr implicit type='(Int, Int)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:25:9 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:25:9 - line:25:13]
            (declref_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:25:9 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:25:9 - line:25:9] decl=Main.(file).x@/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:24:5 function_ref=unapplied)
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:25:13 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:25:13 - line:25:13] value=1 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))))
))
  (var_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:25:5 - line:25:5] "y" type='Int' interface type='Int' access=internal let readImpl=stored immutable)
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:26:1 - line:26:13]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:26:1 - line:26:13]
      (pattern_binding_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:26:1 - line:26:13]
        (pattern_named type='Int' 'z')
        Original init:
        (sequence_expr type='<null>'
          (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:26:9 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:26:9 - line:26:9] value=2 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)
          (overloaded_decl_ref_expr type='<null>' name=+ number_of_decls=31 function_ref=single decls=[
            Swift.(file).String extension.+,
            Swift.(file).Float extension.+,
            Swift.(file).Double extension.+,
            Swift.(file).Float80 extension.+,
            Swift.(file).UInt8 extension.+,
            Swift.(file).Int8 extension.+,
            Swift.(file).UInt16 extension.+,
            Swift.(file).Int16 extension.+,
            Swift.(file).UInt32 extension.+,
            Swift.(file).Int32 extension.+,
            Swift.(file).UInt64 extension.+,
            Swift.(file).Int64 extension.+,
            Swift.(file).UInt extension.+,
            Swift.(file).Int extension.+,
            Swift.(file).Array extension.+,
            Swift.(file).FloatingPoint.+,
            Swift.(file).AdditiveArithmetic.+,
            Swift.(file).BinaryInteger.+,
            Swift.(file).Strideable extension.+,
            Swift.(file).Strideable extension.+,
            Swift.(file).Sequence extension.+,
            Swift.(file).Sequence extension.+,
            Swift.(file).SIMD extension.+,
            Swift.(file).SIMD extension.+,
            Swift.(file).SIMD extension.+,
            Swift.(file).SIMD extension.+,
            Swift.(file).SIMD extension.+,
            Swift.(file).SIMD extension.+,
            Swift.(file).RangeReplaceableCollection extension.+,
            Swift.(file).RangeReplaceableCollection extension.+,
            Swift.(file).RangeReplaceableCollection extension.+])
          (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:26:13 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:26:13 - line:26:13] value=3 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))
        Processed init:
        (binary_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:26:11 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:26:9 - line:26:13] nothrow
          (dot_syntax_call_expr implicit type='(Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:26:11 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:26:11 - line:26:11] nothrow
            (declref_expr type='(Int.Type) -> (Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:26:11 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:26:11 - line:26:11] decl=Swift.(file).Int extension.+ function_ref=single)
            (type_expr implicit type='Int.Type' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:26:11 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:26:11 - line:26:11] typerepr='Int'))
          (tuple_expr implicit type='(Int, Int)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:26:9 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:26:9 - line:26:13]
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:26:9 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:26:9 - line:26:9] value=2 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:26:13 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:26:13 - line:26:13] value=3 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))))
))
  (var_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:26:5 - line:26:5] "z" type='Int' interface type='Int' access=internal let readImpl=stored immutable)
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:28:1 - line:28:8]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:28:1 - line:28:8]
      (call_expr type='()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:28:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:28:1 - line:28:8] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:28:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:28:1 - line:28:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_expr type='(Any..., separator: String, terminator: String)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:28:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:28:6 - line:28:8] names='',separator,terminator
          (vararg_expansion_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:28:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:28:7 - line:28:7]
            (array_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:28:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:28:7 - line:28:7] initializer=**NULL**
              (erasure_expr implicit type='Any' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:28:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:28:7 - line:28:7]
                (declref_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:28:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:28:7 - line:28:7] decl=Main.(file).x@/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:24:5 function_ref=unapplied))))
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:28:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:28:6 - line:28:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=1)
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:28:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:28:6 - line:28:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=2)))))
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:29:1 - line:29:8]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:29:1 - line:29:8]
      (call_expr type='()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:29:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:29:1 - line:29:8] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:29:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:29:1 - line:29:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_expr type='(Any..., separator: String, terminator: String)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:29:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:29:6 - line:29:8] names='',separator,terminator
          (vararg_expansion_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:29:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:29:7 - line:29:7]
            (array_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:29:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:29:7 - line:29:7] initializer=**NULL**
              (erasure_expr implicit type='Any' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:29:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:29:7 - line:29:7]
                (declref_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:29:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:29:7 - line:29:7] decl=Main.(file).y@/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:25:5 function_ref=unapplied))))
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:29:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:29:6 - line:29:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=1)
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:29:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:29:6 - line:29:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=2)))))
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:30:1 - line:30:8]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:30:1 - line:30:8]
      (call_expr type='()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:30:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:30:1 - line:30:8] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:30:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:30:1 - line:30:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_expr type='(Any..., separator: String, terminator: String)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:30:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:30:6 - line:30:8] names='',separator,terminator
          (vararg_expansion_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:30:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:30:7 - line:30:7]
            (array_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:30:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:30:7 - line:30:7] initializer=**NULL**
              (erasure_expr implicit type='Any' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:30:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:30:7 - line:30:7]
                (declref_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:30:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:30:7 - line:30:7] decl=Main.(file).z@/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:26:5 function_ref=unapplied))))
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:30:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:30:6 - line:30:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=1)
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:30:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:30:6 - line:30:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=2)))))
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:33:1 - line:33:26]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:33:1 - line:33:26]
      (pattern_binding_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:33:1 - line:33:26]
        (pattern_named type='Int' 'multiplication')
        Original init:
        (sequence_expr type='<null>'
          (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:33:22 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:33:22 - line:33:22] value=0 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)
          (overloaded_decl_ref_expr type='<null>' name=* number_of_decls=22 function_ref=single decls=[
            Swift.(file).Float extension.*,
            Swift.(file).Double extension.*,
            Swift.(file).Float80 extension.*,
            Swift.(file).UInt8 extension.*,
            Swift.(file).Int8 extension.*,
            Swift.(file).UInt16 extension.*,
            Swift.(file).Int16 extension.*,
            Swift.(file).UInt32 extension.*,
            Swift.(file).Int32 extension.*,
            Swift.(file).UInt64 extension.*,
            Swift.(file).Int64 extension.*,
            Swift.(file).UInt extension.*,
            Swift.(file).Int extension.*,
            Swift.(file).FloatingPoint.*,
            Swift.(file).Numeric.*,
            Swift.(file).BinaryInteger.*,
            Swift.(file).SIMD extension.*,
            Swift.(file).SIMD extension.*,
            Swift.(file).SIMD extension.*,
            Swift.(file).SIMD extension.*,
            Swift.(file).SIMD extension.*,
            Swift.(file).SIMD extension.*])
          (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:33:26 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:33:26 - line:33:26] value=1 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))
        Processed init:
        (binary_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:33:24 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:33:22 - line:33:26] nothrow
          (dot_syntax_call_expr implicit type='(Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:33:24 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:33:24 - line:33:24] nothrow
            (declref_expr type='(Int.Type) -> (Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:33:24 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:33:24 - line:33:24] decl=Swift.(file).Int extension.* function_ref=single)
            (type_expr implicit type='Int.Type' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:33:24 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:33:24 - line:33:24] typerepr='Int'))
          (tuple_expr implicit type='(Int, Int)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:33:22 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:33:22 - line:33:26]
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:33:22 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:33:22 - line:33:22] value=0 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:33:26 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:33:26 - line:33:26] value=1 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))))
))
  (var_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:33:5 - line:33:5] "multiplication" type='Int' interface type='Int' access=internal let readImpl=stored immutable)
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:34:1 - line:34:21]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:34:1 - line:34:21]
      (pattern_binding_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:34:1 - line:34:21]
        (pattern_named type='Int' 'division')
        Original init:
        (sequence_expr type='<null>'
          (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:34:16 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:34:16 - line:34:16] value=10 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)
          (overloaded_decl_ref_expr type='<null>' name=/ number_of_decls=21 function_ref=single decls=[
            Swift.(file).Float extension./,
            Swift.(file).Double extension./,
            Swift.(file).Float80 extension./,
            Swift.(file).UInt8 extension./,
            Swift.(file).Int8 extension./,
            Swift.(file).UInt16 extension./,
            Swift.(file).Int16 extension./,
            Swift.(file).UInt32 extension./,
            Swift.(file).Int32 extension./,
            Swift.(file).UInt64 extension./,
            Swift.(file).Int64 extension./,
            Swift.(file).UInt extension./,
            Swift.(file).Int extension./,
            Swift.(file).FloatingPoint./,
            Swift.(file).BinaryInteger./,
            Swift.(file).SIMD extension./,
            Swift.(file).SIMD extension./,
            Swift.(file).SIMD extension./,
            Swift.(file).SIMD extension./,
            Swift.(file).SIMD extension./,
            Swift.(file).SIMD extension./])
          (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:34:21 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:34:21 - line:34:21] value=2 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))
        Processed init:
        (binary_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:34:19 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:34:16 - line:34:21] nothrow
          (dot_syntax_call_expr implicit type='(Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:34:19 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:34:19 - line:34:19] nothrow
            (declref_expr type='(Int.Type) -> (Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:34:19 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:34:19 - line:34:19] decl=Swift.(file).Int extension./ function_ref=single)
            (type_expr implicit type='Int.Type' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:34:19 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:34:19 - line:34:19] typerepr='Int'))
          (tuple_expr implicit type='(Int, Int)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:34:16 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:34:16 - line:34:21]
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:34:16 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:34:16 - line:34:16] value=10 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:34:21 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:34:21 - line:34:21] value=2 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))))
))
  (var_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:34:5 - line:34:5] "division" type='Int' interface type='Int' access=internal let readImpl=stored immutable)
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:35:1 - line:35:23]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:35:1 - line:35:23]
      (pattern_binding_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:35:1 - line:35:23]
        (pattern_named type='Int' 'subtraction')
        Original init:
        (sequence_expr type='<null>'
          (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:35:19 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:35:19 - line:35:19] value=3 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)
          (overloaded_decl_ref_expr type='<null>' name=- number_of_decls=24 function_ref=single decls=[
            Swift.(file).Float extension.-,
            Swift.(file).Double extension.-,
            Swift.(file).Float80 extension.-,
            Swift.(file).UInt8 extension.-,
            Swift.(file).Int8 extension.-,
            Swift.(file).UInt16 extension.-,
            Swift.(file).Int16 extension.-,
            Swift.(file).UInt32 extension.-,
            Swift.(file).Int32 extension.-,
            Swift.(file).UInt64 extension.-,
            Swift.(file).Int64 extension.-,
            Swift.(file).UInt extension.-,
            Swift.(file).Int extension.-,
            Swift.(file).FloatingPoint.-,
            Swift.(file).AdditiveArithmetic.-,
            Swift.(file).BinaryInteger.-,
            Swift.(file).Strideable extension.-,
            Swift.(file).Strideable extension.-,
            Swift.(file).SIMD extension.-,
            Swift.(file).SIMD extension.-,
            Swift.(file).SIMD extension.-,
            Swift.(file).SIMD extension.-,
            Swift.(file).SIMD extension.-,
            Swift.(file).SIMD extension.-])
          (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:35:23 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:35:23 - line:35:23] value=1 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))
        Processed init:
        (binary_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:35:21 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:35:19 - line:35:23] nothrow
          (dot_syntax_call_expr implicit type='(Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:35:21 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:35:21 - line:35:21] nothrow
            (declref_expr type='(Int.Type) -> (Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:35:21 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:35:21 - line:35:21] decl=Swift.(file).Int extension.- function_ref=single)
            (type_expr implicit type='Int.Type' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:35:21 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:35:21 - line:35:21] typerepr='Int'))
          (tuple_expr implicit type='(Int, Int)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:35:19 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:35:19 - line:35:23]
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:35:19 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:35:19 - line:35:19] value=3 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:35:23 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:35:23 - line:35:23] value=1 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))))
))
  (var_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:35:5 - line:35:5] "subtraction" type='Int' interface type='Int' access=internal let readImpl=stored immutable)
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:36:1 - line:36:15]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:36:1 - line:36:15]
      (pattern_binding_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:36:1 - line:36:15]
        (pattern_named type='Int' 'sum')
        Original init:
        (sequence_expr type='<null>'
          (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:36:11 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:36:11 - line:36:11] value=4 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)
          (overloaded_decl_ref_expr type='<null>' name=+ number_of_decls=31 function_ref=single decls=[
            Swift.(file).String extension.+,
            Swift.(file).Float extension.+,
            Swift.(file).Double extension.+,
            Swift.(file).Float80 extension.+,
            Swift.(file).UInt8 extension.+,
            Swift.(file).Int8 extension.+,
            Swift.(file).UInt16 extension.+,
            Swift.(file).Int16 extension.+,
            Swift.(file).UInt32 extension.+,
            Swift.(file).Int32 extension.+,
            Swift.(file).UInt64 extension.+,
            Swift.(file).Int64 extension.+,
            Swift.(file).UInt extension.+,
            Swift.(file).Int extension.+,
            Swift.(file).Array extension.+,
            Swift.(file).FloatingPoint.+,
            Swift.(file).AdditiveArithmetic.+,
            Swift.(file).BinaryInteger.+,
            Swift.(file).Strideable extension.+,
            Swift.(file).Strideable extension.+,
            Swift.(file).Sequence extension.+,
            Swift.(file).Sequence extension.+,
            Swift.(file).SIMD extension.+,
            Swift.(file).SIMD extension.+,
            Swift.(file).SIMD extension.+,
            Swift.(file).SIMD extension.+,
            Swift.(file).SIMD extension.+,
            Swift.(file).SIMD extension.+,
            Swift.(file).RangeReplaceableCollection extension.+,
            Swift.(file).RangeReplaceableCollection extension.+,
            Swift.(file).RangeReplaceableCollection extension.+])
          (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:36:15 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:36:15 - line:36:15] value=1 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))
        Processed init:
        (binary_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:36:13 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:36:11 - line:36:15] nothrow
          (dot_syntax_call_expr implicit type='(Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:36:13 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:36:13 - line:36:13] nothrow
            (declref_expr type='(Int.Type) -> (Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:36:13 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:36:13 - line:36:13] decl=Swift.(file).Int extension.+ function_ref=single)
            (type_expr implicit type='Int.Type' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:36:13 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:36:13 - line:36:13] typerepr='Int'))
          (tuple_expr implicit type='(Int, Int)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:36:11 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:36:11 - line:36:15]
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:36:11 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:36:11 - line:36:11] value=4 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:36:15 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:36:15 - line:36:15] value=1 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))))
))
  (var_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:36:5 - line:36:5] "sum" type='Int' interface type='Int' access=internal let readImpl=stored immutable)
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:38:1 - line:38:21]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:38:1 - line:38:21]
      (call_expr type='()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:38:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:38:1 - line:38:21] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:38:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:38:1 - line:38:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_expr type='(Any..., separator: String, terminator: String)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:38:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:38:6 - line:38:21] names='',separator,terminator
          (vararg_expansion_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:38:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:38:7 - line:38:7]
            (array_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:38:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:38:7 - line:38:7] initializer=**NULL**
              (erasure_expr implicit type='Any' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:38:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:38:7 - line:38:7]
                (declref_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:38:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:38:7 - line:38:7] decl=Main.(file).multiplication@/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:33:5 function_ref=unapplied))))
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:38:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:38:6 - line:38:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=1)
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:38:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:38:6 - line:38:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=2)))))
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:39:1 - line:39:15]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:39:1 - line:39:15]
      (call_expr type='()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:39:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:39:1 - line:39:15] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:39:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:39:1 - line:39:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_expr type='(Any..., separator: String, terminator: String)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:39:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:39:6 - line:39:15] names='',separator,terminator
          (vararg_expansion_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:39:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:39:7 - line:39:7]
            (array_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:39:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:39:7 - line:39:7] initializer=**NULL**
              (erasure_expr implicit type='Any' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:39:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:39:7 - line:39:7]
                (declref_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:39:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:39:7 - line:39:7] decl=Main.(file).division@/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:34:5 function_ref=unapplied))))
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:39:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:39:6 - line:39:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=1)
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:39:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:39:6 - line:39:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=2)))))
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:40:1 - line:40:18]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:40:1 - line:40:18]
      (call_expr type='()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:40:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:40:1 - line:40:18] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:40:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:40:1 - line:40:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_expr type='(Any..., separator: String, terminator: String)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:40:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:40:6 - line:40:18] names='',separator,terminator
          (vararg_expansion_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:40:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:40:7 - line:40:7]
            (array_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:40:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:40:7 - line:40:7] initializer=**NULL**
              (erasure_expr implicit type='Any' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:40:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:40:7 - line:40:7]
                (declref_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:40:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:40:7 - line:40:7] decl=Main.(file).subtraction@/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:35:5 function_ref=unapplied))))
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:40:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:40:6 - line:40:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=1)
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:40:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:40:6 - line:40:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=2)))))
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:41:1 - line:41:10]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:41:1 - line:41:10]
      (call_expr type='()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:41:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:41:1 - line:41:10] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:41:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:41:1 - line:41:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_expr type='(Any..., separator: String, terminator: String)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:41:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:41:6 - line:41:10] names='',separator,terminator
          (vararg_expansion_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:41:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:41:7 - line:41:7]
            (array_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:41:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:41:7 - line:41:7] initializer=**NULL**
              (erasure_expr implicit type='Any' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:41:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:41:7 - line:41:7]
                (declref_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:41:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:41:7 - line:41:7] decl=Main.(file).sum@/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:36:5 function_ref=unapplied))))
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:41:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:41:6 - line:41:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=1)
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:41:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:41:6 - line:41:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=2)))))
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:44:1 - line:44:25]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:44:1 - line:44:25]
      (pattern_binding_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:44:1 - line:44:25]
        (pattern_named type='Int' 'multiplication2')
        Original init:
        (sequence_expr type='<null>'
          (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:44:23 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:44:23 - line:44:23] value=0 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)
          (overloaded_decl_ref_expr type='<null>' name=* number_of_decls=22 function_ref=single decls=[
            Swift.(file).Float extension.*,
            Swift.(file).Double extension.*,
            Swift.(file).Float80 extension.*,
            Swift.(file).UInt8 extension.*,
            Swift.(file).Int8 extension.*,
            Swift.(file).UInt16 extension.*,
            Swift.(file).Int16 extension.*,
            Swift.(file).UInt32 extension.*,
            Swift.(file).Int32 extension.*,
            Swift.(file).UInt64 extension.*,
            Swift.(file).Int64 extension.*,
            Swift.(file).UInt extension.*,
            Swift.(file).Int extension.*,
            Swift.(file).FloatingPoint.*,
            Swift.(file).Numeric.*,
            Swift.(file).BinaryInteger.*,
            Swift.(file).SIMD extension.*,
            Swift.(file).SIMD extension.*,
            Swift.(file).SIMD extension.*,
            Swift.(file).SIMD extension.*,
            Swift.(file).SIMD extension.*,
            Swift.(file).SIMD extension.*])
          (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:44:25 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:44:25 - line:44:25] value=1 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))
        Processed init:
        (binary_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:44:24 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:44:23 - line:44:25] nothrow
          (dot_syntax_call_expr implicit type='(Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:44:24 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:44:24 - line:44:24] nothrow
            (declref_expr type='(Int.Type) -> (Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:44:24 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:44:24 - line:44:24] decl=Swift.(file).Int extension.* function_ref=single)
            (type_expr implicit type='Int.Type' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:44:24 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:44:24 - line:44:24] typerepr='Int'))
          (tuple_expr implicit type='(Int, Int)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:44:23 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:44:23 - line:44:25]
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:44:23 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:44:23 - line:44:23] value=0 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:44:25 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:44:25 - line:44:25] value=1 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))))
))
  (var_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:44:5 - line:44:5] "multiplication2" type='Int' interface type='Int' access=internal let readImpl=stored immutable)
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:45:1 - line:45:20]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:45:1 - line:45:20]
      (pattern_binding_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:45:1 - line:45:20]
        (pattern_named type='Int' 'division2')
        Original init:
        (sequence_expr type='<null>'
          (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:45:17 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:45:17 - line:45:17] value=10 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)
          (overloaded_decl_ref_expr type='<null>' name=/ number_of_decls=21 function_ref=single decls=[
            Swift.(file).Float extension./,
            Swift.(file).Double extension./,
            Swift.(file).Float80 extension./,
            Swift.(file).UInt8 extension./,
            Swift.(file).Int8 extension./,
            Swift.(file).UInt16 extension./,
            Swift.(file).Int16 extension./,
            Swift.(file).UInt32 extension./,
            Swift.(file).Int32 extension./,
            Swift.(file).UInt64 extension./,
            Swift.(file).Int64 extension./,
            Swift.(file).UInt extension./,
            Swift.(file).Int extension./,
            Swift.(file).FloatingPoint./,
            Swift.(file).BinaryInteger./,
            Swift.(file).SIMD extension./,
            Swift.(file).SIMD extension./,
            Swift.(file).SIMD extension./,
            Swift.(file).SIMD extension./,
            Swift.(file).SIMD extension./,
            Swift.(file).SIMD extension./])
          (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:45:20 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:45:20 - line:45:20] value=2 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))
        Processed init:
        (binary_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:45:19 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:45:17 - line:45:20] nothrow
          (dot_syntax_call_expr implicit type='(Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:45:19 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:45:19 - line:45:19] nothrow
            (declref_expr type='(Int.Type) -> (Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:45:19 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:45:19 - line:45:19] decl=Swift.(file).Int extension./ function_ref=single)
            (type_expr implicit type='Int.Type' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:45:19 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:45:19 - line:45:19] typerepr='Int'))
          (tuple_expr implicit type='(Int, Int)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:45:17 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:45:17 - line:45:20]
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:45:17 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:45:17 - line:45:17] value=10 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:45:20 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:45:20 - line:45:20] value=2 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))))
))
  (var_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:45:5 - line:45:5] "division2" type='Int' interface type='Int' access=internal let readImpl=stored immutable)
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:46:1 - line:46:22]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:46:1 - line:46:22]
      (pattern_binding_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:46:1 - line:46:22]
        (pattern_named type='Int' 'subtraction2')
        Original init:
        (sequence_expr type='<null>'
          (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:46:20 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:46:20 - line:46:20] value=3 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)
          (overloaded_decl_ref_expr type='<null>' name=- number_of_decls=24 function_ref=single decls=[
            Swift.(file).Float extension.-,
            Swift.(file).Double extension.-,
            Swift.(file).Float80 extension.-,
            Swift.(file).UInt8 extension.-,
            Swift.(file).Int8 extension.-,
            Swift.(file).UInt16 extension.-,
            Swift.(file).Int16 extension.-,
            Swift.(file).UInt32 extension.-,
            Swift.(file).Int32 extension.-,
            Swift.(file).UInt64 extension.-,
            Swift.(file).Int64 extension.-,
            Swift.(file).UInt extension.-,
            Swift.(file).Int extension.-,
            Swift.(file).FloatingPoint.-,
            Swift.(file).AdditiveArithmetic.-,
            Swift.(file).BinaryInteger.-,
            Swift.(file).Strideable extension.-,
            Swift.(file).Strideable extension.-,
            Swift.(file).SIMD extension.-,
            Swift.(file).SIMD extension.-,
            Swift.(file).SIMD extension.-,
            Swift.(file).SIMD extension.-,
            Swift.(file).SIMD extension.-,
            Swift.(file).SIMD extension.-])
          (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:46:22 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:46:22 - line:46:22] value=1 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))
        Processed init:
        (binary_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:46:21 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:46:20 - line:46:22] nothrow
          (dot_syntax_call_expr implicit type='(Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:46:21 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:46:21 - line:46:21] nothrow
            (declref_expr type='(Int.Type) -> (Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:46:21 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:46:21 - line:46:21] decl=Swift.(file).Int extension.- function_ref=single)
            (type_expr implicit type='Int.Type' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:46:21 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:46:21 - line:46:21] typerepr='Int'))
          (tuple_expr implicit type='(Int, Int)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:46:20 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:46:20 - line:46:22]
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:46:20 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:46:20 - line:46:20] value=3 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:46:22 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:46:22 - line:46:22] value=1 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))))
))
  (var_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:46:5 - line:46:5] "subtraction2" type='Int' interface type='Int' access=internal let readImpl=stored immutable)
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:47:1 - line:47:14]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:47:1 - line:47:14]
      (pattern_binding_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:47:1 - line:47:14]
        (pattern_named type='Int' 'sum2')
        Original init:
        (sequence_expr type='<null>'
          (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:47:12 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:47:12 - line:47:12] value=4 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)
          (overloaded_decl_ref_expr type='<null>' name=+ number_of_decls=31 function_ref=single decls=[
            Swift.(file).String extension.+,
            Swift.(file).Float extension.+,
            Swift.(file).Double extension.+,
            Swift.(file).Float80 extension.+,
            Swift.(file).UInt8 extension.+,
            Swift.(file).Int8 extension.+,
            Swift.(file).UInt16 extension.+,
            Swift.(file).Int16 extension.+,
            Swift.(file).UInt32 extension.+,
            Swift.(file).Int32 extension.+,
            Swift.(file).UInt64 extension.+,
            Swift.(file).Int64 extension.+,
            Swift.(file).UInt extension.+,
            Swift.(file).Int extension.+,
            Swift.(file).Array extension.+,
            Swift.(file).FloatingPoint.+,
            Swift.(file).AdditiveArithmetic.+,
            Swift.(file).BinaryInteger.+,
            Swift.(file).Strideable extension.+,
            Swift.(file).Strideable extension.+,
            Swift.(file).Sequence extension.+,
            Swift.(file).Sequence extension.+,
            Swift.(file).SIMD extension.+,
            Swift.(file).SIMD extension.+,
            Swift.(file).SIMD extension.+,
            Swift.(file).SIMD extension.+,
            Swift.(file).SIMD extension.+,
            Swift.(file).SIMD extension.+,
            Swift.(file).RangeReplaceableCollection extension.+,
            Swift.(file).RangeReplaceableCollection extension.+,
            Swift.(file).RangeReplaceableCollection extension.+])
          (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:47:14 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:47:14 - line:47:14] value=1 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))
        Processed init:
        (binary_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:47:13 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:47:12 - line:47:14] nothrow
          (dot_syntax_call_expr implicit type='(Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:47:13 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:47:13 - line:47:13] nothrow
            (declref_expr type='(Int.Type) -> (Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:47:13 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:47:13 - line:47:13] decl=Swift.(file).Int extension.+ function_ref=single)
            (type_expr implicit type='Int.Type' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:47:13 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:47:13 - line:47:13] typerepr='Int'))
          (tuple_expr implicit type='(Int, Int)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:47:12 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:47:12 - line:47:14]
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:47:12 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:47:12 - line:47:12] value=4 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:47:14 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:47:14 - line:47:14] value=1 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))))
))
  (var_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:47:5 - line:47:5] "sum2" type='Int' interface type='Int' access=internal let readImpl=stored immutable)
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:49:1 - line:49:22]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:49:1 - line:49:22]
      (call_expr type='()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:49:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:49:1 - line:49:22] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:49:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:49:1 - line:49:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_expr type='(Any..., separator: String, terminator: String)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:49:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:49:6 - line:49:22] names='',separator,terminator
          (vararg_expansion_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:49:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:49:7 - line:49:7]
            (array_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:49:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:49:7 - line:49:7] initializer=**NULL**
              (erasure_expr implicit type='Any' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:49:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:49:7 - line:49:7]
                (declref_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:49:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:49:7 - line:49:7] decl=Main.(file).multiplication2@/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:44:5 function_ref=unapplied))))
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:49:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:49:6 - line:49:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=1)
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:49:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:49:6 - line:49:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=2)))))
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:50:1 - line:50:16]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:50:1 - line:50:16]
      (call_expr type='()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:50:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:50:1 - line:50:16] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:50:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:50:1 - line:50:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_expr type='(Any..., separator: String, terminator: String)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:50:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:50:6 - line:50:16] names='',separator,terminator
          (vararg_expansion_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:50:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:50:7 - line:50:7]
            (array_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:50:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:50:7 - line:50:7] initializer=**NULL**
              (erasure_expr implicit type='Any' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:50:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:50:7 - line:50:7]
                (declref_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:50:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:50:7 - line:50:7] decl=Main.(file).division2@/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:45:5 function_ref=unapplied))))
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:50:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:50:6 - line:50:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=1)
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:50:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:50:6 - line:50:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=2)))))
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:51:1 - line:51:19]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:51:1 - line:51:19]
      (call_expr type='()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:51:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:51:1 - line:51:19] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:51:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:51:1 - line:51:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_expr type='(Any..., separator: String, terminator: String)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:51:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:51:6 - line:51:19] names='',separator,terminator
          (vararg_expansion_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:51:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:51:7 - line:51:7]
            (array_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:51:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:51:7 - line:51:7] initializer=**NULL**
              (erasure_expr implicit type='Any' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:51:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:51:7 - line:51:7]
                (declref_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:51:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:51:7 - line:51:7] decl=Main.(file).subtraction2@/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:46:5 function_ref=unapplied))))
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:51:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:51:6 - line:51:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=1)
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:51:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:51:6 - line:51:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=2)))))
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:52:1 - line:52:11]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:52:1 - line:52:11]
      (call_expr type='()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:52:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:52:1 - line:52:11] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:52:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:52:1 - line:52:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_expr type='(Any..., separator: String, terminator: String)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:52:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:52:6 - line:52:11] names='',separator,terminator
          (vararg_expansion_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:52:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:52:7 - line:52:7]
            (array_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:52:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:52:7 - line:52:7] initializer=**NULL**
              (erasure_expr implicit type='Any' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:52:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:52:7 - line:52:7]
                (declref_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:52:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:52:7 - line:52:7] decl=Main.(file).sum2@/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:47:5 function_ref=unapplied))))
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:52:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:52:6 - line:52:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=1)
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:52:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:52:6 - line:52:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=2)))))
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:55:1 - line:55:28]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:55:1 - line:55:28]
      (pattern_binding_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:55:1 - line:55:28]
        (pattern_named type='Int' 'multiplication3')
        Original init:
        (sequence_expr type='<null>'
          (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:55:23 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:55:23 - line:55:23] value=0 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)
          (overloaded_decl_ref_expr type='<null>' name=* number_of_decls=22 function_ref=single decls=[
            Swift.(file).Float extension.*,
            Swift.(file).Double extension.*,
            Swift.(file).Float80 extension.*,
            Swift.(file).UInt8 extension.*,
            Swift.(file).Int8 extension.*,
            Swift.(file).UInt16 extension.*,
            Swift.(file).Int16 extension.*,
            Swift.(file).UInt32 extension.*,
            Swift.(file).Int32 extension.*,
            Swift.(file).UInt64 extension.*,
            Swift.(file).Int64 extension.*,
            Swift.(file).UInt extension.*,
            Swift.(file).Int extension.*,
            Swift.(file).FloatingPoint.*,
            Swift.(file).Numeric.*,
            Swift.(file).BinaryInteger.*,
            Swift.(file).SIMD extension.*,
            Swift.(file).SIMD extension.*,
            Swift.(file).SIMD extension.*,
            Swift.(file).SIMD extension.*,
            Swift.(file).SIMD extension.*,
            Swift.(file).SIMD extension.*])
          (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:55:27 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:55:27 - line:55:28] negative value=1 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))
        Processed init:
        (binary_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:55:25 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:55:23 - line:55:28] nothrow
          (dot_syntax_call_expr implicit type='(Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:55:25 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:55:25 - line:55:25] nothrow
            (declref_expr type='(Int.Type) -> (Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:55:25 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:55:25 - line:55:25] decl=Swift.(file).Int extension.* function_ref=single)
            (type_expr implicit type='Int.Type' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:55:25 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:55:25 - line:55:25] typerepr='Int'))
          (tuple_expr implicit type='(Int, Int)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:55:23 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:55:23 - line:55:28]
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:55:23 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:55:23 - line:55:23] value=0 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:55:27 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:55:27 - line:55:28] negative value=1 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))))
))
  (var_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:55:5 - line:55:5] "multiplication3" type='Int' interface type='Int' access=internal readImpl=stored writeImpl=stored readWriteImpl=stored)
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:56:1 - line:56:23]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:56:1 - line:56:23]
      (pattern_binding_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:56:1 - line:56:23]
        (pattern_named type='Int' 'division3')
        Original init:
        (sequence_expr type='<null>'
          (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:56:17 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:56:17 - line:56:18] negative value=10 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)
          (overloaded_decl_ref_expr type='<null>' name=/ number_of_decls=21 function_ref=single decls=[
            Swift.(file).Float extension./,
            Swift.(file).Double extension./,
            Swift.(file).Float80 extension./,
            Swift.(file).UInt8 extension./,
            Swift.(file).Int8 extension./,
            Swift.(file).UInt16 extension./,
            Swift.(file).Int16 extension./,
            Swift.(file).UInt32 extension./,
            Swift.(file).Int32 extension./,
            Swift.(file).UInt64 extension./,
            Swift.(file).Int64 extension./,
            Swift.(file).UInt extension./,
            Swift.(file).Int extension./,
            Swift.(file).FloatingPoint./,
            Swift.(file).BinaryInteger./,
            Swift.(file).SIMD extension./,
            Swift.(file).SIMD extension./,
            Swift.(file).SIMD extension./,
            Swift.(file).SIMD extension./,
            Swift.(file).SIMD extension./,
            Swift.(file).SIMD extension./])
          (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:56:23 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:56:23 - line:56:23] value=2 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))
        Processed init:
        (binary_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:56:21 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:56:17 - line:56:23] nothrow
          (dot_syntax_call_expr implicit type='(Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:56:21 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:56:21 - line:56:21] nothrow
            (declref_expr type='(Int.Type) -> (Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:56:21 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:56:21 - line:56:21] decl=Swift.(file).Int extension./ function_ref=single)
            (type_expr implicit type='Int.Type' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:56:21 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:56:21 - line:56:21] typerepr='Int'))
          (tuple_expr implicit type='(Int, Int)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:56:17 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:56:17 - line:56:23]
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:56:17 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:56:17 - line:56:18] negative value=10 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:56:23 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:56:23 - line:56:23] value=2 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))))
))
  (var_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:56:5 - line:56:5] "division3" type='Int' interface type='Int' access=internal readImpl=stored writeImpl=stored readWriteImpl=stored)
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:57:1 - line:57:25]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:57:1 - line:57:25]
      (pattern_binding_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:57:1 - line:57:25]
        (pattern_named type='Int' 'subtraction3')
        Original init:
        (sequence_expr type='<null>'
          (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:57:20 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:57:20 - line:57:21] negative value=3 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)
          (overloaded_decl_ref_expr type='<null>' name=- number_of_decls=24 function_ref=single decls=[
            Swift.(file).Float extension.-,
            Swift.(file).Double extension.-,
            Swift.(file).Float80 extension.-,
            Swift.(file).UInt8 extension.-,
            Swift.(file).Int8 extension.-,
            Swift.(file).UInt16 extension.-,
            Swift.(file).Int16 extension.-,
            Swift.(file).UInt32 extension.-,
            Swift.(file).Int32 extension.-,
            Swift.(file).UInt64 extension.-,
            Swift.(file).Int64 extension.-,
            Swift.(file).UInt extension.-,
            Swift.(file).Int extension.-,
            Swift.(file).FloatingPoint.-,
            Swift.(file).AdditiveArithmetic.-,
            Swift.(file).BinaryInteger.-,
            Swift.(file).Strideable extension.-,
            Swift.(file).Strideable extension.-,
            Swift.(file).SIMD extension.-,
            Swift.(file).SIMD extension.-,
            Swift.(file).SIMD extension.-,
            Swift.(file).SIMD extension.-,
            Swift.(file).SIMD extension.-,
            Swift.(file).SIMD extension.-])
          (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:57:25 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:57:25 - line:57:25] value=1 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))
        Processed init:
        (binary_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:57:23 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:57:20 - line:57:25] nothrow
          (dot_syntax_call_expr implicit type='(Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:57:23 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:57:23 - line:57:23] nothrow
            (declref_expr type='(Int.Type) -> (Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:57:23 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:57:23 - line:57:23] decl=Swift.(file).Int extension.- function_ref=single)
            (type_expr implicit type='Int.Type' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:57:23 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:57:23 - line:57:23] typerepr='Int'))
          (tuple_expr implicit type='(Int, Int)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:57:20 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:57:20 - line:57:25]
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:57:20 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:57:20 - line:57:21] negative value=3 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:57:25 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:57:25 - line:57:25] value=1 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))))
))
  (var_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:57:5 - line:57:5] "subtraction3" type='Int' interface type='Int' access=internal readImpl=stored writeImpl=stored readWriteImpl=stored)
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:58:1 - line:58:17]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:58:1 - line:58:17]
      (pattern_binding_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:58:1 - line:58:17]
        (pattern_named type='Int' 'sum3')
        Original init:
        (sequence_expr type='<null>'
          (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:58:12 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:58:12 - line:58:12] value=4 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)
          (overloaded_decl_ref_expr type='<null>' name=+ number_of_decls=31 function_ref=single decls=[
            Swift.(file).String extension.+,
            Swift.(file).Float extension.+,
            Swift.(file).Double extension.+,
            Swift.(file).Float80 extension.+,
            Swift.(file).UInt8 extension.+,
            Swift.(file).Int8 extension.+,
            Swift.(file).UInt16 extension.+,
            Swift.(file).Int16 extension.+,
            Swift.(file).UInt32 extension.+,
            Swift.(file).Int32 extension.+,
            Swift.(file).UInt64 extension.+,
            Swift.(file).Int64 extension.+,
            Swift.(file).UInt extension.+,
            Swift.(file).Int extension.+,
            Swift.(file).Array extension.+,
            Swift.(file).FloatingPoint.+,
            Swift.(file).AdditiveArithmetic.+,
            Swift.(file).BinaryInteger.+,
            Swift.(file).Strideable extension.+,
            Swift.(file).Strideable extension.+,
            Swift.(file).Sequence extension.+,
            Swift.(file).Sequence extension.+,
            Swift.(file).SIMD extension.+,
            Swift.(file).SIMD extension.+,
            Swift.(file).SIMD extension.+,
            Swift.(file).SIMD extension.+,
            Swift.(file).SIMD extension.+,
            Swift.(file).SIMD extension.+,
            Swift.(file).RangeReplaceableCollection extension.+,
            Swift.(file).RangeReplaceableCollection extension.+,
            Swift.(file).RangeReplaceableCollection extension.+])
          (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:58:16 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:58:16 - line:58:17] negative value=1 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))
        Processed init:
        (binary_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:58:14 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:58:12 - line:58:17] nothrow
          (dot_syntax_call_expr implicit type='(Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:58:14 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:58:14 - line:58:14] nothrow
            (declref_expr type='(Int.Type) -> (Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:58:14 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:58:14 - line:58:14] decl=Swift.(file).Int extension.+ function_ref=single)
            (type_expr implicit type='Int.Type' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:58:14 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:58:14 - line:58:14] typerepr='Int'))
          (tuple_expr implicit type='(Int, Int)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:58:12 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:58:12 - line:58:17]
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:58:12 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:58:12 - line:58:12] value=4 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:58:16 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:58:16 - line:58:17] negative value=1 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))))
))
  (var_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:58:5 - line:58:5] "sum3" type='Int' interface type='Int' access=internal readImpl=stored writeImpl=stored readWriteImpl=stored)
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:60:1 - line:60:22]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:60:1 - line:60:22]
      (call_expr type='()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:60:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:60:1 - line:60:22] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:60:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:60:1 - line:60:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_expr type='(Any..., separator: String, terminator: String)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:60:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:60:6 - line:60:22] names='',separator,terminator
          (vararg_expansion_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:60:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:60:7 - line:60:7]
            (array_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:60:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:60:7 - line:60:7] initializer=**NULL**
              (erasure_expr implicit type='Any' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:60:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:60:7 - line:60:7]
                (load_expr implicit type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:60:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:60:7 - line:60:7]
                  (declref_expr type='@lvalue Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:60:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:60:7 - line:60:7] decl=Main.(file).multiplication3@/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:55:5 function_ref=unapplied)))))
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:60:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:60:6 - line:60:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=1)
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:60:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:60:6 - line:60:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=2)))))
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:61:1 - line:61:16]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:61:1 - line:61:16]
      (call_expr type='()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:61:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:61:1 - line:61:16] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:61:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:61:1 - line:61:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_expr type='(Any..., separator: String, terminator: String)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:61:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:61:6 - line:61:16] names='',separator,terminator
          (vararg_expansion_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:61:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:61:7 - line:61:7]
            (array_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:61:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:61:7 - line:61:7] initializer=**NULL**
              (erasure_expr implicit type='Any' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:61:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:61:7 - line:61:7]
                (load_expr implicit type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:61:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:61:7 - line:61:7]
                  (declref_expr type='@lvalue Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:61:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:61:7 - line:61:7] decl=Main.(file).division3@/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:56:5 function_ref=unapplied)))))
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:61:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:61:6 - line:61:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=1)
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:61:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:61:6 - line:61:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=2)))))
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:62:1 - line:62:19]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:62:1 - line:62:19]
      (call_expr type='()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:62:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:62:1 - line:62:19] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:62:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:62:1 - line:62:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_expr type='(Any..., separator: String, terminator: String)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:62:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:62:6 - line:62:19] names='',separator,terminator
          (vararg_expansion_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:62:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:62:7 - line:62:7]
            (array_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:62:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:62:7 - line:62:7] initializer=**NULL**
              (erasure_expr implicit type='Any' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:62:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:62:7 - line:62:7]
                (load_expr implicit type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:62:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:62:7 - line:62:7]
                  (declref_expr type='@lvalue Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:62:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:62:7 - line:62:7] decl=Main.(file).subtraction3@/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:57:5 function_ref=unapplied)))))
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:62:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:62:6 - line:62:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=1)
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:62:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:62:6 - line:62:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=2)))))
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:63:1 - line:63:11]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:63:1 - line:63:11]
      (call_expr type='()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:63:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:63:1 - line:63:11] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:63:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:63:1 - line:63:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_expr type='(Any..., separator: String, terminator: String)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:63:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:63:6 - line:63:11] names='',separator,terminator
          (vararg_expansion_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:63:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:63:7 - line:63:7]
            (array_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:63:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:63:7 - line:63:7] initializer=**NULL**
              (erasure_expr implicit type='Any' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:63:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:63:7 - line:63:7]
                (load_expr implicit type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:63:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:63:7 - line:63:7]
                  (declref_expr type='@lvalue Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:63:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:63:7 - line:63:7] decl=Main.(file).sum3@/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:58:5 function_ref=unapplied)))))
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:63:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:63:6 - line:63:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=1)
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:63:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:63:6 - line:63:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=2)))))
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:66:1 - line:66:23]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:66:1 - line:66:23]
      (assign_expr type='()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:66:17 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:66:1 - line:66:23]
        (declref_expr type='@lvalue Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:66:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:66:1 - line:66:1] decl=Main.(file).multiplication3@/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:55:5 function_ref=unapplied)
        (binary_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:66:21 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:66:19 - line:66:23] nothrow
          (dot_syntax_call_expr implicit type='(Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:66:21 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:66:21 - line:66:21] nothrow
            (declref_expr type='(Int.Type) -> (Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:66:21 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:66:21 - line:66:21] decl=Swift.(file).Int extension.* function_ref=single)
            (type_expr implicit type='Int.Type' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:66:21 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:66:21 - line:66:21] typerepr='Int'))
          (tuple_expr implicit type='(Int, Int)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:66:19 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:66:19 - line:66:23]
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:66:19 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:66:19 - line:66:19] value=1 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:66:23 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:66:23 - line:66:23] value=2 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))))))
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:67:1 - line:67:17]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:67:1 - line:67:17]
      (assign_expr type='()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:67:11 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:67:1 - line:67:17]
        (declref_expr type='@lvalue Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:67:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:67:1 - line:67:1] decl=Main.(file).division3@/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:56:5 function_ref=unapplied)
        (binary_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:67:15 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:67:13 - line:67:17] nothrow
          (dot_syntax_call_expr implicit type='(Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:67:15 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:67:15 - line:67:15] nothrow
            (declref_expr type='(Int.Type) -> (Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:67:15 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:67:15 - line:67:15] decl=Swift.(file).Int extension./ function_ref=single)
            (type_expr implicit type='Int.Type' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:67:15 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:67:15 - line:67:15] typerepr='Int'))
          (tuple_expr implicit type='(Int, Int)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:67:13 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:67:13 - line:67:17]
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:67:13 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:67:13 - line:67:13] value=1 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:67:17 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:67:17 - line:67:17] value=2 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))))))
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:68:1 - line:68:20]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:68:1 - line:68:20]
      (assign_expr type='()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:68:14 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:68:1 - line:68:20]
        (declref_expr type='@lvalue Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:68:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:68:1 - line:68:1] decl=Main.(file).subtraction3@/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:57:5 function_ref=unapplied)
        (binary_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:68:18 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:68:16 - line:68:20] nothrow
          (dot_syntax_call_expr implicit type='(Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:68:18 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:68:18 - line:68:18] nothrow
            (declref_expr type='(Int.Type) -> (Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:68:18 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:68:18 - line:68:18] decl=Swift.(file).Int extension.- function_ref=single)
            (type_expr implicit type='Int.Type' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:68:18 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:68:18 - line:68:18] typerepr='Int'))
          (tuple_expr implicit type='(Int, Int)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:68:16 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:68:16 - line:68:20]
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:68:16 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:68:16 - line:68:16] value=1 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:68:20 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:68:20 - line:68:20] value=2 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))))))
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:69:1 - line:69:12]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:69:1 - line:69:12]
      (assign_expr type='()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:69:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:69:1 - line:69:12]
        (declref_expr type='@lvalue Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:69:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:69:1 - line:69:1] decl=Main.(file).sum3@/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:58:5 function_ref=unapplied)
        (binary_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:69:10 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:69:8 - line:69:12] nothrow
          (dot_syntax_call_expr implicit type='(Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:69:10 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:69:10 - line:69:10] nothrow
            (declref_expr type='(Int.Type) -> (Int, Int) -> Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:69:10 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:69:10 - line:69:10] decl=Swift.(file).Int extension.+ function_ref=single)
            (type_expr implicit type='Int.Type' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:69:10 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:69:10 - line:69:10] typerepr='Int'))
          (tuple_expr implicit type='(Int, Int)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:69:8 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:69:8 - line:69:12]
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:69:8 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:69:8 - line:69:8] value=1 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:69:12 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:69:12 - line:69:12] value=2 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**))))))
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:71:1 - line:71:22]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:71:1 - line:71:22]
      (call_expr type='()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:71:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:71:1 - line:71:22] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:71:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:71:1 - line:71:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_expr type='(Any..., separator: String, terminator: String)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:71:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:71:6 - line:71:22] names='',separator,terminator
          (vararg_expansion_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:71:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:71:7 - line:71:7]
            (array_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:71:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:71:7 - line:71:7] initializer=**NULL**
              (erasure_expr implicit type='Any' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:71:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:71:7 - line:71:7]
                (load_expr implicit type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:71:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:71:7 - line:71:7]
                  (declref_expr type='@lvalue Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:71:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:71:7 - line:71:7] decl=Main.(file).multiplication3@/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:55:5 function_ref=unapplied)))))
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:71:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:71:6 - line:71:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=1)
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:71:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:71:6 - line:71:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=2)))))
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:72:1 - line:72:16]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:72:1 - line:72:16]
      (call_expr type='()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:72:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:72:1 - line:72:16] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:72:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:72:1 - line:72:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_expr type='(Any..., separator: String, terminator: String)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:72:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:72:6 - line:72:16] names='',separator,terminator
          (vararg_expansion_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:72:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:72:7 - line:72:7]
            (array_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:72:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:72:7 - line:72:7] initializer=**NULL**
              (erasure_expr implicit type='Any' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:72:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:72:7 - line:72:7]
                (load_expr implicit type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:72:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:72:7 - line:72:7]
                  (declref_expr type='@lvalue Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:72:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:72:7 - line:72:7] decl=Main.(file).division3@/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:56:5 function_ref=unapplied)))))
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:72:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:72:6 - line:72:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=1)
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:72:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:72:6 - line:72:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=2)))))
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:73:1 - line:73:19]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:73:1 - line:73:19]
      (call_expr type='()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:73:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:73:1 - line:73:19] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:73:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:73:1 - line:73:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_expr type='(Any..., separator: String, terminator: String)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:73:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:73:6 - line:73:19] names='',separator,terminator
          (vararg_expansion_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:73:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:73:7 - line:73:7]
            (array_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:73:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:73:7 - line:73:7] initializer=**NULL**
              (erasure_expr implicit type='Any' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:73:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:73:7 - line:73:7]
                (load_expr implicit type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:73:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:73:7 - line:73:7]
                  (declref_expr type='@lvalue Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:73:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:73:7 - line:73:7] decl=Main.(file).subtraction3@/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:57:5 function_ref=unapplied)))))
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:73:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:73:6 - line:73:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=1)
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:73:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:73:6 - line:73:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=2)))))
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:74:1 - line:74:11]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:74:1 - line:74:11]
      (call_expr type='()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:74:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:74:1 - line:74:11] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:74:1 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:74:1 - line:74:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_expr type='(Any..., separator: String, terminator: String)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:74:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:74:6 - line:74:11] names='',separator,terminator
          (vararg_expansion_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:74:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:74:7 - line:74:7]
            (array_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:74:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:74:7 - line:74:7] initializer=**NULL**
              (erasure_expr implicit type='Any' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:74:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:74:7 - line:74:7]
                (load_expr implicit type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:74:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:74:7 - line:74:7]
                  (declref_expr type='@lvalue Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:74:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:74:7 - line:74:7] decl=Main.(file).sum3@/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:58:5 function_ref=unapplied)))))
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:74:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:74:6 - line:74:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=1)
          (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:74:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:74:6 - line:74:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=2)))))
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:77:1 - line:79:1]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:77:1 - line:79:1]
      (if_stmt range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:77:1 - line:79:1]
        (binary_expr type='Bool' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:77:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:77:4 - line:77:9] nothrow
          (dot_syntax_call_expr implicit type='(Int, Int) -> Bool' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:77:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:77:6 - line:77:6] nothrow
            (declref_expr type='(Int.Type) -> (Int, Int) -> Bool' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:77:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:77:6 - line:77:6] decl=Swift.(file).Int.== function_ref=single)
            (type_expr implicit type='Int.Type' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:77:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:77:6 - line:77:6] typerepr='Int'))
          (tuple_expr implicit type='(Int, Int)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:77:4 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:77:4 - line:77:9]
            (declref_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:77:4 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:77:4 - line:77:4] decl=Main.(file).x@/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:24:5 function_ref=unapplied)
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:77:9 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:77:9 - line:77:9] value=0 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)))
        (brace_stmt range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:77:11 - line:79:1]
          (call_expr type='()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:78:2 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:78:2 - line:78:14] nothrow arg_labels=_:
            (declref_expr type='(Any..., String, String) -> ()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:78:2 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:78:2 - line:78:2] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
            (tuple_expr type='(Any..., separator: String, terminator: String)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:78:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:78:7 - line:78:14] names='',separator,terminator
              (vararg_expansion_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:78:8 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:78:8 - line:78:8]
                (array_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:78:8 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:78:8 - line:78:8] initializer=**NULL**
                  (erasure_expr implicit type='Any' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:78:8 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:78:8 - line:78:8]
                    (string_literal_expr type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:78:8 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:78:8 - line:78:8] encoding=utf8 value="true" builtin_initializer=Swift.(file).String extension.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))
              (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:78:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:78:7 - line:78:7] default_args_owner=Swift.(file).print(_:separator:terminator:) param=1)
              (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:78:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:78:7 - line:78:7] default_args_owner=Swift.(file).print(_:separator:terminator:) param=2)))))))
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:81:1 - line:83:1]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:81:1 - line:83:1]
      (if_stmt range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:81:1 - line:83:1]
        (binary_expr type='Bool' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:81:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:81:4 - line:81:9] nothrow
          (dot_syntax_call_expr implicit type='(Int, Int) -> Bool' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:81:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:81:6 - line:81:6] nothrow
            (declref_expr type='(Int.Type) -> (Int, Int) -> Bool' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:81:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:81:6 - line:81:6] decl=Swift.(file).Int.== function_ref=single)
            (type_expr implicit type='Int.Type' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:81:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:81:6 - line:81:6] typerepr='Int'))
          (tuple_expr implicit type='(Int, Int)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:81:4 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:81:4 - line:81:9]
            (declref_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:81:4 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:81:4 - line:81:4] decl=Main.(file).x@/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:24:5 function_ref=unapplied)
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:81:9 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:81:9 - line:81:9] value=1 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)))
        (brace_stmt range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:81:11 - line:83:1]
          (call_expr type='()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:82:2 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:82:2 - line:82:15] nothrow arg_labels=_:
            (declref_expr type='(Any..., String, String) -> ()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:82:2 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:82:2 - line:82:2] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
            (tuple_expr type='(Any..., separator: String, terminator: String)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:82:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:82:7 - line:82:15] names='',separator,terminator
              (vararg_expansion_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:82:8 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:82:8 - line:82:8]
                (array_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:82:8 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:82:8 - line:82:8] initializer=**NULL**
                  (erasure_expr implicit type='Any' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:82:8 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:82:8 - line:82:8]
                    (string_literal_expr type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:82:8 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:82:8 - line:82:8] encoding=utf8 value="false" builtin_initializer=Swift.(file).String extension.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))
              (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:82:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:82:7 - line:82:7] default_args_owner=Swift.(file).print(_:separator:terminator:) param=1)
              (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:82:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:82:7 - line:82:7] default_args_owner=Swift.(file).print(_:separator:terminator:) param=2)))))))
  (top_level_code_decl range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:85:1 - line:87:1]
    (brace_stmt implicit range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:85:1 - line:87:1]
      (if_stmt range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:85:1 - line:87:1]
        (binary_expr type='Bool' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:85:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:85:4 - line:85:9] nothrow
          (dot_syntax_call_expr implicit type='(Int, Int) -> Bool' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:85:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:85:6 - line:85:6] nothrow
            (declref_expr type='(Int.Type) -> (Int, Int) -> Bool' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:85:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:85:6 - line:85:6] decl=Swift.(file).BinaryInteger extension.!= [with (substitution_map generic_signature=<Self where Self : BinaryInteger> (substitution Self -> Int))] function_ref=single)
            (type_expr implicit type='Int.Type' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:85:6 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:85:6 - line:85:6] typerepr='Int'))
          (tuple_expr implicit type='(Int, Int)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:85:4 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:85:4 - line:85:9]
            (declref_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:85:4 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:85:4 - line:85:4] decl=Main.(file).x@/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:24:5 function_ref=unapplied)
            (integer_literal_expr type='Int' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:85:9 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:85:9 - line:85:9] value=1 builtin_initializer=Swift.(file).Int.init(_builtinIntegerLiteral:) initializer=**NULL**)))
        (brace_stmt range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:85:11 - line:87:1]
          (call_expr type='()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:86:2 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:86:2 - line:86:14] nothrow arg_labels=_:
            (declref_expr type='(Any..., String, String) -> ()' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:86:2 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:86:2 - line:86:2] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
            (tuple_expr type='(Any..., separator: String, terminator: String)' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:86:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:86:7 - line:86:14] names='',separator,terminator
              (vararg_expansion_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:86:8 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:86:8 - line:86:8]
                (array_expr implicit type='[Any]' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:86:8 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:86:8 - line:86:8] initializer=**NULL**
                  (erasure_expr implicit type='Any' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:86:8 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:86:8 - line:86:8]
                    (string_literal_expr type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:86:8 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:86:8 - line:86:8] encoding=utf8 value="true" builtin_initializer=Swift.(file).String extension.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))
              (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:86:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:86:7 - line:86:7] default_args_owner=Swift.(file).print(_:separator:terminator:) param=1)
              (default_argument_expr implicit type='String' location=/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:86:7 range=[/Users/vini/Development/Gryphon/Gryphon bootstrap/Test cases/operators.swift:86:7 - line:86:7] default_args_owner=Swift.(file).print(_:separator:terminator:) param=2))))))))